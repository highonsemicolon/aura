name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.goversion.outputs.go-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read Go version from go.mod
        id: goversion
        run: |
          GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')
          echo "go-version=$GO_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.goversion.outputs.go-version }}

  lint-and-deps:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Verify dependencies
        run: |
          make tidy
          git diff --exit-code go.mod go.sum
      - name: Format check
        run: |
          make fmt
          git diff --exit-code

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Build server
        run: make build
      - name: Build client
        run: make client

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: make test

  proto-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Check protobuf is up to date
        run: |
          make proto
          git diff --exit-code gen/

  docker:
    runs-on: ubuntu-latest
    needs: [lint-and-deps]
    steps:
      - uses: actions/checkout@v4
      - name: Docker build
        run: docker build -t aura:${{ github.sha }} .
